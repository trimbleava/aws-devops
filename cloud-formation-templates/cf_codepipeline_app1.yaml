# Source: https://github.com/awslabs/aws-cloudformation-templates/tree/master/aws/solutions/CodeBuildAndCodePipeline
# App1 deploys a CodeCommit Repository, two CodeBuild jobs, and then creates a CodePipeline 
# which uses continuous integration to run any time changes are pushed to the code commit repository.
# The templates can be expanded to create multiple CodeBuild jobs or add additional environments to the CodePipeline stages.
# This project contains two CloudFormation templates (cf_codebuild_app1.yml, cf_codepipeline_app1.yaml)

AWSTemplateFormatVersion: 2010-09-09

Description: This template deploys a codepipeline which is triggered on a commit to main. 
             It has 3 stages 
              app-build stage       - executes the app-build CodeBuild job
              Manual approval stage - requires manual approval
              app-deploy stage      - executes the app-deploy CodeBuild job

Parameters:
  CodeBuildStack:
    Type: String
    Description: Name of the code build stack which should have been deployed before this stack

Resources:
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Policies:
        - PolicyName: CanAccessCodeCommit
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                Resource:
                  - Fn::ImportValue: !Sub "${CodeBuildStack}-CodeCommitArn"
                  # - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}/*"
        - PolicyName: CanAccessS3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:ListBucket
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                  - s3:GetBucketPolicy
                  - s3:GetObjectAcl
                  - s3:PutObjectAcl
                  - s3:DeleteObject
                Resource:
                  - Fn::ImportValue: !Sub "${CodeBuildStack}-PipelineS3BucketArn"
                  - !Sub
                    - "${filename}/*"
                    - filename:
                        Fn::ImportValue: !Sub "${CodeBuildStack}-PipelineS3BucketArn"
        - PolicyName: CanStartCodeBuild
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - Fn::ImportValue: !Sub "${CodeBuildStack}-AppBuildArn"
                  - Fn::ImportValue: !Sub "${CodeBuildStack}-AppDeployArn"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AWS::StackName}-Code-Pipeline"
      ArtifactStore:
        Type: S3
        Location:
          Fn::ImportValue: !Sub "${CodeBuildStack}-PipelineS3Bucket"
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: 
                  Fn::ImportValue: !Sub "${CodeBuildStack}-CodeCommitName"
                BranchName: main
              OutputArtifacts:
                - Name: Source
        - Name: Build-AppBuild
          Actions:
            - Name: App-Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Fn::ImportValue: !Sub "${CodeBuildStack}-AppBuild"
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: FullZip
              RunOrder: 1
        - Name: Deploy-App
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                CustomData: Review the build output and approve to deploy
              RunOrder: 2
            - Name: App-Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Fn::ImportValue: !Sub "${CodeBuildStack}-AppDeploy"
                PrimarySource: Source
                EnvironmentVariables: '[{"name":"ENVIRONMENT","value":"SampleEnv","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: Source
                - Name: FullZip
              RunOrder: 3